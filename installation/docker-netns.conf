[Service]
PrivateNetwork=yes

# NOTE: This file is run in Docker's network namespace,
# thus any nsenter here refers to the host's namespace

# cleanup any existing docker0 on host
ExecStartPre=-nsenter -t 1 -n -- ip link delete docker0

# add veth on host: docker0 <-> docker0_ns
ExecStartPre=nsenter -t 1 -n -- ip link add docker0 type veth peer name docker0_ns
# move docker0_ns to netns
ExecStartPre=sh -c 'nsenter -t 1 -n -- ip link set docker0_ns netns "$$BASHPID" && true'
# rename to eth0 in the netns (to clearly mark it as uplink)
ExecStartPre=ip link set docker0_ns name eth0

# bring host side online
ExecStartPre=nsenter -t 1 -n -- ip addr add 192.168.250.10/24 dev docker0
ExecStartPre=nsenter -t 1 -n -- ip link set docker0 up

# bring docker side online
ExecStartPre=ip addr add 192.168.250.11/24 dev eth0
ExecStartPre=ip link set eth0 up

# set up default route s.t. docker can access internet via host bridge
ExecStartPre=ip route add default via 192.168.250.10 dev eth0
# set up route s.t. host can access docker network
ExecStartPre=nsenter -t 1 -n -- ip route add 192.168.128.0/18 via 192.168.250.11 dev docker0
